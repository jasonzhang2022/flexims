<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.flexdms</groupId>
	<artifactId>flexims</artifactId>
	<version>0.1.0-SNAPSHOT</version>
	<packaging>pom</packaging>
	<name>fexims</name>
	<description>
		A project to create data model from web. Once model is created, SQL schema, JPA mapping, JAXB mapping and web form are available.
	
	</description>
	<modules>
		<module>common</module>
		<module>js</module>
		<module>testorm</module>
		<module>report</module>
		<module>users</module>
		<module>security</module>
		<module>auth</module>
		<module>urlctrl</module>
		<module>dbfiles</module>
		<module>googlefiles</module>
		<module>s3files</module>
		<module>tomcat_web</module>
		<module>jetty_web</module>
		<module>servicetest</module>
		<module>module</module>
		<module>ittest</module>
	</modules>

	<!-- repositories>
		<repository>
			<id>oss.sonatype.org</id>
			<name>OSS Sonatype Staging</name>
			<url>https://oss.sonatype.org/content/groups/staging</url>
		</repository>
	</repositories -->
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<version.org.jboss.shrinkwrap>2.0.0</version.org.jboss.shrinkwrap>
		<version.org.jboss.arquillian>1.1.1.Final</version.org.jboss.arquillian>
		<version.org.jboss.arquillian.drone>1.2.1.Final</version.org.jboss.arquillian.drone>

		<!-- use 2.39.0 to support firsfox 26 -->
		<version.selenium>2.39.0</version.selenium>
		<!-- use old Guana to avoid conflict with CDI -->
		<version.com.google.guana>14.0.1</version.com.google.guana>

		<version.jersey>2.17</version.jersey>
		<version.deltaspike>1.3.0</version.deltaspike>
		<version.eclipselink>2.6.0</version.eclipselink>
		<version.weld>2.2.8.Final</version.weld>
		<version.slf4j>1.7.5</version.slf4j>
		<version.quartz>2.2.1</version.quartz>
		<version.arquillian.jacoco>1.0.0.Alpha6</version.arquillian.jacoco>
		<version.jacoco>0.7.1.201405082137</version.jacoco>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.jmockit</groupId>
				<artifactId>jmockit</artifactId>
				<version>1.17</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${version.slf4j}</version>
			</dependency>
			<!-- define dependency version -->
			<dependency>
				<groupId>org.jboss.shrinkwrap.resolver</groupId>
				<artifactId>shrinkwrap-resolver-bom</artifactId>
				<version>${version.org.jboss.shrinkwrap}</version>
				<scope>import</scope>
				<type>pom</type>
			</dependency>
			<dependency>
				<groupId>org.jboss.arquillian.extension</groupId>
				<artifactId>arquillian-drone-bom</artifactId>
				<version>${version.org.jboss.arquillian.drone}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.jboss.arquillian</groupId>
				<artifactId>arquillian-bom</artifactId>
				<version>${version.org.jboss.arquillian}</version>
				<scope>import</scope>
				<type>pom</type>
			</dependency>
			<dependency>
			  <groupId>org.jboss.arquillian.extension</groupId>
			  <artifactId>arquillian-jacoco</artifactId>
			  <version>${version.arquillian.jacoco}</version>
			  <scope>test</scope>
			</dependency>
			<dependency>
                <groupId>org.jacoco</groupId>
                <artifactId>org.jacoco.core</artifactId>
                <version>${version.jacoco}</version>
                 <scope>provided</scope>
            </dependency>

			<!-- use selenium 2.39 so firerfox 26 can work -->
			<dependency>
				<groupId>org.seleniumhq.selenium</groupId>
				<artifactId>selenium-api</artifactId>
				<version>${version.selenium}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.seleniumhq.selenium</groupId>
				<artifactId>selenium-java</artifactId>
				<version>${version.selenium}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.seleniumhq.selenium</groupId>
				<artifactId>selenium-support</artifactId>
				<version>${version.selenium}</version>
				<scope>test</scope>
			</dependency>

			<!-- Drivers -->
			<dependency>
				<groupId>org.seleniumhq.selenium</groupId>
				<artifactId>selenium-firefox-driver</artifactId>
				<version>${version.selenium}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.seleniumhq.selenium</groupId>
				<artifactId>selenium-htmlunit-driver</artifactId>
				<version>${version.selenium}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.seleniumhq.selenium</groupId>
				<artifactId>selenium-ie-driver</artifactId>
				<version>${version.selenium}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.seleniumhq.selenium</groupId>
				<artifactId>selenium-iphone-driver</artifactId>
				<version>${version.selenium}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.seleniumhq.selenium</groupId>
				<artifactId>selenium-remote-driver</artifactId>
				<version>${version.selenium}</version>
				<scope>test</scope>
			</dependency>



			<dependency>
				<groupId>com.google.guava</groupId>
				<artifactId>guava</artifactId>
				<version>${version.com.google.guana}</version>
			</dependency>

			<dependency>
				<groupId>javax.enterprise</groupId>
				<artifactId>cdi-api</artifactId>
				<version>1.1</version>
				<exclusions>
					<!-- In Tomcat -->
					<exclusion>
						<groupId>javax.el</groupId>
						<artifactId>el-api</artifactId>
					</exclusion>
					<!-- In Annotation -->
					<exclusion>
						<groupId>javax.inject</groupId>
						<artifactId>javax.inject</artifactId>
					</exclusion>
					<!-- <exclusion> -->
					<!-- <groupId>org.jboss.spec.javax.interceptor</groupId> -->
					<!-- <artifactId>jboss-interceptors-api_1.1_spec</artifactId> -->
					<!-- </exclusion> -->

				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.eclipse.persistence</groupId>
				<artifactId>org.eclipse.persistence.jpa</artifactId>
				<version>${version.eclipselink}</version>
			</dependency>
			<dependency>
				<groupId>org.eclipse.persistence</groupId>
				<artifactId>org.eclipse.persistence.jpa.jpql</artifactId>
				<version>${version.eclipselink}</version>
			</dependency>
			<dependency>
				<groupId>org.eclipse.persistence</groupId>
				<artifactId>org.eclipse.persistence.moxy</artifactId>
				<version>${version.eclipselink}</version>
			</dependency>

			<dependency>
				<groupId>org.eclipse.persistence</groupId>
				<artifactId>org.eclipse.persistence.antlr</artifactId>
				<version>${version.eclipselink}</version>
			</dependency>
			
			
			<dependency>
				<groupId>org.glassfish.jersey</groupId>
				<artifactId>jersey-bom</artifactId>
				<version>${version.jersey}</version>
				<scope>import</scope>
				<type>pom</type>
			</dependency>
                
		</dependencies>
	</dependencyManagement>



	<dependencies>

		<!-- test and arquillian -->
		<!-- Jmockit must be before junit -->
		<dependency>
			<groupId>org.jmockit</groupId>
			<artifactId>jmockit</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
			<exclusions>
				<!-- exclude this. We will have hamcresent library. If this is included, 
					there is class conflict. -->
				<exclusion>
					<artifactId>hamcrest-core</artifactId>
					<groupId>org.hamcrest</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.jboss.shrinkwrap.resolver</groupId>
			<artifactId>shrinkwrap-resolver-depchain</artifactId>
			<scope>test</scope>
			<type>pom</type>
		</dependency>

		<dependency>
			<groupId>org.jboss.arquillian.junit</groupId>
			<artifactId>arquillian-junit-container</artifactId>
			<scope>test</scope>
		</dependency>


		<dependency>
			<groupId>org.jboss.arquillian.extension</groupId>
			<artifactId>arquillian-drone-webdriver-depchain</artifactId>
			<type>pom</type>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<!-- we use servlet 3.0. servlet is provided -->
					<artifactId>servlet-api-2.5</artifactId>
					<groupId>org.mortbay.jetty</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-all</artifactId>
			<version>1.3</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.dbunit</groupId>
			<artifactId>dbunit</artifactId>
			<version>2.4.9</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.arquillian.extension</groupId>
			<artifactId>arquillian-persistence-impl</artifactId>
			<version>1.0.0.Alpha6</version>
			<scope>test</scope>
		</dependency>

		<!-- Persistence and JDBC eclipse link is also used for JAXB and JAX-RS -->
		<dependency>
			<groupId>postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>9.1-901-1.jdbc4</version>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.27</version>
		</dependency>
		<dependency>
			<groupId>org.apache.derby</groupId>
			<artifactId>derby</artifactId>
			<version>10.10.1.1</version>
		</dependency>


		<!-- eclipselink -->
		<dependency>
			<groupId>org.eclipse.persistence</groupId>
			<artifactId>org.eclipse.persistence.jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.persistence</groupId>
			<artifactId>org.eclipse.persistence.jpa.jpql</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.persistence</groupId>
			<artifactId>org.eclipse.persistence.moxy</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.persistence</groupId>
			<artifactId>org.eclipse.persistence.antlr</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.persistence</groupId>
			<artifactId>org.eclipse.persistence.jpa.modelgen.processor</artifactId>
			<version>${version.eclipselink}</version>
			<scope>compile</scope>
		</dependency>


		<!-- xml file scanning -->
		<dependency>
			<groupId>net.sf.corn</groupId>
			<artifactId>corn-cps</artifactId>
			<version>1.1.1</version>
		</dependency>


		<!-- CDI API DeltaSpike -->
		<dependency>
			<groupId>javax.annotation</groupId>
			<artifactId>javax.annotation-api</artifactId>
			<version>1.2</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.enterprise</groupId>
			<artifactId>cdi-api</artifactId>
			<exclusions>
				<exclusion>
					<groupId>javax.annotation</groupId>
					<artifactId>jsr250-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		
		<dependency>
			<groupId>org.apache.deltaspike.core</groupId>
			<artifactId>deltaspike-core-impl</artifactId>
			<version>${version.deltaspike}</version>
		</dependency>
	
		<dependency>
			<groupId>org.jboss.weld.se</groupId>
			<artifactId>weld-se</artifactId>
			<version>${version.weld}</version>
			<scope>test</scope>
		</dependency>

		<!--  jersey -->
		<dependency>
			<groupId>org.glassfish.jersey.containers</groupId>
			<artifactId>jersey-container-servlet</artifactId>
			<scope>compile</scope>
		</dependency>
<!-- 		<dependency> -->
<!-- 			<groupId>javax.ws.rs</groupId> -->
<!-- 			<artifactId>javax.ws.rs-api</artifactId> -->
<!-- 			<scope>compile</scope> -->
<!-- 			<version>2.0</version> -->
<!-- 		</dependency> -->

		<dependency>
			<groupId>org.glassfish.jersey.core</groupId>
			<artifactId>jersey-server</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.ext.cdi</groupId>
			<artifactId>jersey-cdi1x</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.ext.cdi</groupId>
			<artifactId>jersey-cdi1x-servlet</artifactId>
			<scope>compile</scope>
		</dependency>
		
		<dependency>
			<groupId>org.jboss.weld.servlet</groupId>
			<artifactId>weld-servlet</artifactId>
			<scope>compile</scope>
			<version>${version.weld}</version>
		</dependency>
		<dependency>
			<groupId>javax.ws.rs</groupId>
			<artifactId>javax.ws.rs-api</artifactId>
			<scope>compile</scope>
			<version>2.0.1</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.hk2.external</groupId>
			<artifactId>javax.inject</artifactId>
			<scope>provided</scope>
			<version>2.4.0-b10</version>
		</dependency>

		<!-- transaction API -->
		<dependency>
			<groupId>javax.transaction</groupId>
			<artifactId>javax.transaction-api</artifactId>
			<version>1.2</version>
		</dependency>


		<!-- Common libraries -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.1</version>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.4</version>
		</dependency>
		<dependency>
			<groupId>javax.mail</groupId>
			<artifactId>mail</artifactId>
			<version>1.4.7</version>
		</dependency>
		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<version>1.1.3</version>
		</dependency>
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>1.8</version>
		</dependency>

		<!-- Use its API -->
		<dependency>
			<groupId>org.apache.tomcat.embed</groupId>
			<artifactId>tomcat-embed-core</artifactId>
			<version>7.0.47</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.derby</groupId>
			<artifactId>derbynet</artifactId>
			<version>10.10.1.1</version>
		</dependency>
		<dependency>
			<groupId>org.apache.derby</groupId>
			<artifactId>derbyclient</artifactId>
			<version>10.10.1.1</version>
		</dependency>
		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
			<version>2.3</version>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-jdk14</artifactId>
			<version>${version.slf4j}</version>
		</dependency>
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-chrome-driver</artifactId>
			<scope>test</scope>
		</dependency>
		
	</dependencies>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>license-maven-plugin</artifactId>
					<version>1.5</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.1</version>
					<configuration>
						<source>1.7</source>
						<target>1.7</target>

						<!-- debug must be true and easy code coverage and annotation process -->
						<debug>true</debug>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.16</version>
					<configuration>
						<!-- classptah is scanned by corn CP. we need traditional classpath 
							for this to work -->
						<useManifestOnlyJar>false</useManifestOnlyJar>
						<!-- Each test class has its own JVM process -->
						<reuseForks>false</reuseForks>
						<excludes>
							<exclude>**/*Base.java</exclude>
							<exclude>**/*IT.java</exclude>
						</excludes>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-failsafe-plugin</artifactId>
					<version>2.16</version>

				</plugin>

				<!-- package -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<version>2.3</version>

				</plugin>
				<plugin>
					<groupId>com.github.klieber</groupId>
					<artifactId>phantomjs-maven-plugin</artifactId>
					<version>0.4</version>
				</plugin>
				<plugin>
					<groupId>com.flexdms</groupId>
					<artifactId>htmltemplate-maven-plugin</artifactId>
					<version>0.1.3-SNAPSHOT</version>
				</plugin>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.jacoco</groupId>
										<artifactId>
											jacoco-maven-plugin
										</artifactId>
										<versionRange>
											[0.7.1.201405082137,)
										</versionRange>
										<goals>
											<goal>prepare-agent</goal>
											<goal>prepare-agent-integration</goal>
											<goal>report</goal>
											<goal>report-integration</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.8</version>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>license-maven-plugin</artifactId>
				<configuration>
					<licenseMerges>
						<licenseMerge>Eclipse Public License - Version 1.0|Eclipse Public
							License v1.0|Eclipse Public License, Version 1.0</licenseMerge>
						<licenseMerge>Apache Software License, Version 2.0|The Apache
							Software License, Version 2.0|Apache License, Version 2.0|Apache
							Public License 2.0|Apache License 2.0|Apache License Version
							2.0|Apache Software License - Version 2.0|Apache 2|Apache License</licenseMerge>
						<licenseMerge>GNU LESSER GENERAL PUBLIC LICENSE|GNU Lesser General
							Public License|lgpl |The GNU General Public License, Version 2</licenseMerge>
						<licenseMerge>GNU Lesser General Public License, version 2.1|LGPL
							2.1|LGPL, version 2.1</licenseMerge>
						<licenseMerge>Mozilla Public License version 1.1|MPL 1.1</licenseMerge>
						<licenseMerge>MIT License|The MIT License</licenseMerge>
						<licenseMerge>BSD License, 3-Clause|BSD License, New|New BSD
							License</licenseMerge>
						<licenseMerge>BSD License, 2-Clause|The BSD 2-Clause License</licenseMerge>
						<licenseMerge>COMMON DEVELOPMENT AND DISTRIBUTION LICENSE
							(CDDL)Version 1.1|CDDL 1.1</licenseMerge>
						<licenseMerge>Apache Software License, Version 1.1|The Apache
							Software License, Version 1.1</licenseMerge>
					</licenseMerges>
					<useMissingFile>true</useMissingFile>

					<excludedGroups>com.flexdms\.*</excludedGroups>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${version.jacoco}</version>
				<configuration>
					<includes>
						<iclude>com/flexdms/flexims/**</iclude>
					</includes>
					<propertyName>jacoco.agent.argLine</propertyName>
					<destFile>${project.build.directory}/jacoco-it.exec</destFile>
				</configuration>
				<executions>
					<execution>
						<id>default-prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<!-- Sets the path to the file which contains the execution data. -->
							<destFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</destFile>
							<!-- Sets the name of the property containing the settings for JaCoCo 
								runtime agent. -->
							<propertyName>jacoco.surefireArgLine</propertyName>
						</configuration>
					</execution>
					<execution>
						<id>default-prepare-agent-integration</id>
						<goals>
							<goal>prepare-agent-integration</goal>
						</goals>
						<configuration>
							<!-- Sets the path to the file which contains the execution data. -->
							<destFile>${project.build.directory}/coverage-reports/jacoco-it.exec</destFile>
							<!-- Sets the name of the property containing the settings for JaCoCo 
								runtime agent. -->
							<propertyName>jacoco.failsafeArgLine</propertyName>
						</configuration>
					</execution>
					<execution>
						<id>post-unit-test</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<!-- Sets the path to the file which contains the execution data. -->
							<dataFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</dataFile>
							<!-- Sets the output directory for the code coverage report. -->
							<outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
						</configuration>
					</execution>
					<execution>
						<id>merge-test-coverage</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>merge</goal>
						</goals>
						<configuration>
							<fileSets>
								<fileSet implementation="org.apache.maven.shared.model.fileset.FileSet">
									<directory>${project.build.directory}/coverage-reports</directory>
									<includes>
										<include>jacoco-ut.exec</include>
										<include>jacoco-it.exec</include>
									</includes>
								</fileSet>
							</fileSets>
							<destFile>${project.build.directory}/coverage-reports/jacoco-test.exec</destFile>
						</configuration>
					</execution>
					<execution>
						<id>all-test-report</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<append>false</append>
							<!-- Sets the path to the file which contains the execution data. -->
							<dataFile>${project.build.directory}/coverage-reports/jacoco-test.exec</dataFile>
							<!-- Sets the output directory for the code coverage report. -->
							<outputDirectory>${project.reporting.outputDirectory}/jacoco-test</outputDirectory>
						</configuration>
					</execution>
					<!-- <execution> -->
					<!-- <id>default-check</id> -->
					<!-- <goals> -->
					<!-- <goal>check</goal> -->
					<!-- </goals> -->
					<!-- <configuration> -->
					<!-- <rules> -->
					<!-- implmentation is needed only for Maven 2 -->
					<!-- <rule implementation="org.jacoco.maven.RuleConfiguration"> -->
					<!-- <element>BUNDLE</element> -->
					<!-- <limits> -->
					<!-- implmentation is needed only for Maven 2 -->
					<!-- <limit implementation="org.jacoco.report.check.Limit"> -->
					<!-- <counter>COMPLEXITY</counter> -->
					<!-- <value>COVEREDRATIO</value> -->
					<!-- <minimum>0.60</minimum> -->
					<!-- </limit> -->
					<!-- </limits> -->
					<!-- </rule> -->
					<!-- </rules> -->
					<!-- </configuration> -->
					<!-- </execution> -->
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<argLine>${jacoco.surefireArgLine}</argLine>
					<systemPropertyVariables>
            			<jacocoSureFire>${jacoco.surefireArgLine}</jacocoSureFire>
            		</systemPropertyVariables>
				</configuration>
			</plugin>
		</plugins>
	</build>
	<profiles>
		<profile>
			<id>tomcat-managed</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<dependencies>
				<dependency>
					<groupId>org.jboss.arquillian.container</groupId>
					<artifactId>arquillian-tomcat-managed-7</artifactId>
					<version>1.0.0.CR6</version>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>commons-dbcp</groupId>
					<artifactId>commons-dbcp</artifactId>
					<version>1.4</version>
				</dependency>
			</dependencies>
		</profile>
		<profile>
			<!-- UI test as unit test -->
			<id>arquillian-tomcat-embedded</id>
			<!-- <activation> -->
			<!-- <activeByDefault>true</activeByDefault> -->
			<!-- </activation> -->
			<dependencies>
				<dependency>
					<groupId>org.jboss.arquillian.container</groupId>
					<artifactId>arquillian-tomcat-embedded-7</artifactId>
					<version>1.0.0.Final-SNAPSHOT</version>
					<scope>test</scope>
				</dependency>

				<!-- org.apache.tomcat -->
				<dependency>
					<groupId>org.apache.tomcat.embed</groupId>
					<artifactId>tomcat-embed-core</artifactId>
					<version>7.0.47</version>
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>org.apache.tomcat.embed</groupId>
					<artifactId>tomcat-embed-jasper</artifactId>
					<version>7.0.47</version>
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>org.apache.tomcat.embed</groupId>
					<artifactId>tomcat-embed-logging-juli</artifactId>
					<version>7.0.47</version>
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>org.eclipse.jdt.core.compiler</groupId>
					<artifactId>ecj</artifactId>
					<version>3.7</version>
					<scope>provided</scope>
				</dependency>

				<dependency>
					<groupId>commons-dbcp</groupId>
					<artifactId>commons-dbcp</artifactId>
					<version>1.4</version>
				</dependency>



				<dependency>
					<groupId>org.jboss.shrinkwrap.resolver</groupId>
					<artifactId>shrinkwrap-resolver-impl-maven</artifactId>
					<scope>test</scope>
				</dependency>
			</dependencies>
		</profile>

	</profiles>
	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>2.16</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>2.12.1</version>
				<reportSets>
					<reportSet>
						<reports>
							<report>checkstyle</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
		</plugins>
	</reporting>

</project>
